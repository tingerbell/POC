name: Build and Deploy

on:
  pull_request:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest
    permissions: write-all
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read variables
        id: read_variables
        run: |
          stableVersion=$(grep "stableVersion:" .github/variables.yml | awk -F ": " '{print $2}')
          echo "::set-output name=stableVersion::$stableVersion"
          
          
      - name: Get Tags
        id: get_tags
        run: |
          tags=$(git ls-remote --tags origin | awk '{print $2}' | awk -F/ '{print $NF}')
          echo "::set-output name=tags::$tags"
          
      - name: Run build
        run: |
          echo "Running build task..."
          existingtags="${{ steps.get_tags.outputs.tags }}"
          current_tag="${{ steps.read_variables.outputs.stableVersion }}"
          if [[ $existingtags =~ (^|[[:space:]])$current_tag($|[[:space:]]) ]]; then
            echo "Tag $current_tag exists! Failing the build."
            exit 1
          else
            echo "Tag $current_tag does not exist. Build can continue."
          fi

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    if: |
      ${{ github.head_ref }} == "main" && ${{ github.base_ref }} == "main" && github.event.pull_request.merged == true
      
    steps:
    
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.stableVersion }}
          release_name: Release${{ needs.build.outputs.stableVersion }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
            - Third Change
          draft: false
          prerelease: false
          
          
          
