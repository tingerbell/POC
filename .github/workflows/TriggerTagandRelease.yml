name: Build and Deploy example

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      version: ${{ steps.read_variables.outputs.stableVersion }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      - name: Read variables
        id: read_variables
        run: |
          stableVersion=$(grep "stableVersion:" .github/variables.yml | awk -F ": " '{print $2}')
          echo "::set-output name=stableVersion::$stableVersion"
      
      - name: Get Tags
        run: git fetch --tags
          
      - name: Compare Tag and Execute build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Comapare tags..."
          CURRENT_TAG="${{ steps.read_variables.outputs.stableVersion }}"
          EXISTING_TAGS=$(git tag --list)
          
          # Compare the current tag with existing tags
          if [[ "${EXISTING_TAGS}" == *"${CURRENT_TAG}"* ]]; then
            echo "The current tag already exists in the main branch."
     
            echo "Blocking PR merge..."
            PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
            REPO_OWNER=$(jq --raw-output .repository.owner.login "$GITHUB_EVENT_PATH")
            REPO_NAME=$(jq --raw-output .repository.name "$GITHUB_EVENT_PATH")

            # Create a comment on the PR using GitHub REST API
            curl -X POST \
              -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github.v3+json" \
              -d '{"body": "Merging this pull request is blocked due to failing merge conditions."}' \
              "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/issues/${PR_NUMBER}/comments"

            # Set the PR status to failed to block the merge
            curl -X POST \
              -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github.v3+json" \
              -d '{"state": "error", "target_url": "https://github.com/${REPO_OWNER}/${REPO_NAME}/pull/${PR_NUMBER}", "description": "Merge blocked due to failing conditions", "context": "Merge Conditions"}' \
              "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/statuses/${GITHUB_SHA}"

            # Exit with a non-zero status to indicate failure
            exit 1
            
          else
            echo "The current tag is unique and doesn't exist in the main branch."
          fi
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    if: |
      ${{ github.head_ref }} == "main" && ${{ github.base_ref }} == "main" && github.event.pull_request.merged == true
      
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: Release${{ needs.build.outputs.version }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
            - Third Change
          draft: false
          prerelease: false             
        
