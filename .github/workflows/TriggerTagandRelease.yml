name: Build and Deploy workflow

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      version: ${{ steps.read_variables.outputs.stableVersion }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      - name: Read variables
        id: read_variables
        run: |
          stableVersion=$(grep "stableVersion:" .github/variables.yml | awk -F ": " '{print $2}')
          echo "::set-output name=stableVersion::$stableVersion"
      
      - name: Get Tags
        run: git fetch --tags
          
      - name: Compare Tag and Execute build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Comapare tags..."
          CURRENT_TAG="${{ steps.read_variables.outputs.stableVersion }}"
          EXISTING_TAGS=$(git tag --list)
          
          # Compare the current tag with existing tags
          if [[ "${EXISTING_TAGS}" == *"${CURRENT_TAG}"* ]]; then
            echo "The current tag already exists in the main branch."
            
          else
            echo "The current tag is unique and doesn't exist in the main branch."
          fi
          
      - name: Check build status and block PR merge
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: runs } = await github.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: context.workflow,
              status: 'completed',
              branch: context.ref,
              per_page: 1,
            });

            if (runs.length > 0 && runs[0].conclusion === 'failure') {
              const prNumber = context.payload.pull_request.number;
              await github.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                mergeable_state: 'blocked',
              });
              console.log(`PR #${prNumber} merge is blocked.`);
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    if: |
      ${{ github.head_ref }} == "main" && ${{ github.base_ref }} == "main" && github.event.pull_request.merged == true
      
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: Release${{ needs.build.outputs.version }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
            - Third Change
          draft: false
          prerelease: false             
        
