name: Build and Deploy workflow sample

on:
 pull_request:
   types:
     - opened
     - synchronize 
     - merged
     - closed
   
   branches:
      - main

jobs:
  PreCheckTag:
    runs-on: ubuntu-latest
    permissions: write-all
    if: |
      ${{ github.head_ref }} == "main" && ${{ github.base_ref }} == "main"
    outputs:
      version: ${{ steps.read_variables.outputs.stableVersion }}
      prInfo: ${{ steps.pr_link.outputs.pullRequestLink }}
      
    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get Pull Request Link
        id: pr_link
        run: |
          pullRequestLink=${{ github.event.pull_request.html_url }}
          echo "pullRequestLink= $pullRequestLink" >> $GITHUB_OUTPUT
        
          
      - name: Read variables
        id: read_variables
        run: |
          stableVersion=$(grep "stableVersion:" .github/variables.yml | awk -F ": " '{print $2}')
          echo "stableVersion=$stableVersion">> $GITHUB_OUTPUT
      
      - name: Get Tags
        run: git fetch --tags
          
      - name: Compare Tag and Execute build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Comapare tags..."
          CURRENT_TAG="${{ steps.read_variables.outputs.stableVersion }}"
          EXISTING_TAGS=$(git tag --list)
          
          # Compare the current tag with existing tags
          if [[ "${EXISTING_TAGS}" == *"${CURRENT_TAG}"* ]]; then
            echo -e "\e[1;93mThe current tag ${CURRENT_TAG} already exists in the main branch."
            exit 1
          else
            echo -e "\e[1;93mThe current tag is unique and doesn't exist in the main branch."
            echo -e "\e[1;93m\e[1;4m Tag :${CURRENT_TAG} and Release ${CURRENT_TAG} will be created in further stage"
            echo ${CURRENT_TAG}
          fi

  CreateTagandRelease:
    needs: PreCheckTag
    runs-on: ubuntu-latest
   
    permissions: write-all
    if: |
      github.event.pull_request.merged == true
      
    steps:
      - name: Set up Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          
      - name: Create Release
        id: create_release
        run: |
          npm install -g actions/create-release@v1
          create-release --tag_name ${{ needs.PreCheckTag.outputs.version }} --release_name Release${{ needs.PreCheckTag.outputs.version }} --body "Click on this link ${{ needs.PreCheckTag.outputs.prInfo }} to check the relevant set of commits from the pull request." --draft false --prerelease false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
       
      - name: Display Release and Tag Details
        run: |
          echo -e "\e[1;93mCreated tag: ${{ needs.PreCheckTag.outputs.version }} and Release ID:${{ needs.PreCheckTag.outputs.version }}  successfully"
          
        
